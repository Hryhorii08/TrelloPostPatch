import requests
from flask import Flask, request, jsonify

app = Flask(__name__)

# üîπ –î–∞–Ω–Ω—ã–µ Trello –∏ Telegram
TRELLO_API_KEY = "5880197335c3d727693408202c68375d"
TRELLO_TOKEN = "ATTA1ea4c6edf0b2892fec32580ab1417a42f521cd70c11af1453ddd0a4956e72896C175BE4E"
TRELLO_LIST_ID = "67c19cd6641117e44ae95227"
TELEGRAM_BOT_TOKEN = "7788946008:AAGULYh-GIkpr-GA3ZA70ERdCAT6BcGNW-g"
CHAT_ID = "-1002307069728"

# üîπ –ë–∞–∑–æ–≤—ã–π URL API Trello
TRELLO_BASE_URL = "https://api.trello.com/1"

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ –∏–º–µ–Ω–∏
def find_card(name):
    url = f"{TRELLO_BASE_URL}/lists/{TRELLO_LIST_ID}/cards"
    query = {"key": TRELLO_API_KEY, "token": TRELLO_TOKEN}
    response = requests.get(url, params=query)
    
    if response.status_code == 200:
        cards = response.json()
        for card in cards:
            if card["name"].lower() == f"–∑–∞—è–≤–∫–∞ –æ—Ç {name.lower()}":
                return card["id"], card.get("desc", "")
    return None, None

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": message, "parse_mode": "Markdown"}
    requests.post(url, json=payload)

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
@app.route("/send_to_trello", methods=["POST"])
def send_to_trello():
    data = request.json
    name = data.get("name")
    course = data.get("course")
    age = data.get("age")
    city = data.get("city")

    if not all([name, course, age, city]):
        return "–û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã", 400

    card_id, _ = find_card(name)
    if card_id:
        return "–û—à–∏–±–∫–∞: –∑–∞—è–≤–∫–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", 400

    url = f"{TRELLO_BASE_URL}/cards"
    query = {
        "name": f"–ó–∞—è–≤–∫–∞ –æ—Ç {name}",
        "desc": f"–ö—É—Ä—Å: {course}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–ì–æ—Ä–æ–¥: {city}",
        "idList": TRELLO_LIST_ID,
        "key": TRELLO_API_KEY,
        "token": TRELLO_TOKEN
    }
    response = requests.post(url, params=query)

    if response.status_code == 200:
        send_telegram_message(f"‚úÖ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞* –æ—Ç {name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Trello!")
        return f"–ó–∞—è–≤–∫–∞ –æ—Ç {name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞", 200
    else:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏", 500

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
@app.route("/update_trello", methods=["POST"])
def update_trello():
    data = request.json
    name = data.get("name")
    field = data.get("field")
    new_value = data.get("new_value")

    if not all([name, field, new_value]):
        return "–û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã", 400

    card_id, old_desc = find_card(name)
    if not card_id:
        return f"–ó–∞—è–≤–∫–∞ —Å –∏–º–µ–Ω–µ–º '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", 400

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏
    updated_desc = []
    field_updated = False
    for line in old_desc.split("\n"):
        if line.startswith(f"{field.capitalize()}:"):
            updated_desc.append(f"{field.capitalize()}: {new_value}")
            field_updated = True
        else:
            updated_desc.append(line)

    if not field_updated:
        updated_desc.append(f"{field.capitalize()}: {new_value}")

    new_desc = "\n".join(updated_desc)

    url = f"{TRELLO_BASE_URL}/cards/{card_id}"
    query = {"desc": new_desc, "key": TRELLO_API_KEY, "token": TRELLO_TOKEN}
    response = requests.put(url, params=query)

    if response.status_code == 200:
        send_telegram_message(f"üü¢ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏*\n–ò–º—è: {name}\n‚úè –ò–∑–º–µ–Ω–µ–Ω–æ: {field} ‚Üí {new_value}")
        return f"–ó–∞—è–≤–∫–∞ '{name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞. {field.capitalize()} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {new_value}", 200
    else:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏", 500

# üîπ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
