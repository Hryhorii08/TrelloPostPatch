import requests
from flask import Flask, request

app = Flask(__name__)

# üîπ –î–ê–ù–ù–´–ï TRELLO (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
TRELLO_API_KEY = "5880197335c3d727693408202c68375d"
TRELLO_TOKEN = "ATTA1ea4c6edf0b2892fec32580ab1417a42f521cd70c11af1453ddd0a4956e72896C175BE4E"
TRELLO_LIST_ID = "67c19cd6641117e44ae95227"
TELEGRAM_BOT_TOKEN = "7788946008:AAGULYh-GIkpr-GA3ZA70ERdCAT6BcGNW-g"
TELEGRAM_CHAT_ID = "-1002307069728"

# –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞—è–≤–æ–∫ (–¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ –ø–æ –∏–º–µ–Ω–∏)
applications = {}

# üîπ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –≤ Trello
def create_trello_card(name, course, age, city):
    url = "https://api.trello.com/1/cards"
    query = {
        "name": f"–ó–∞—è–≤–∫–∞ –æ—Ç {name}",
        "desc": f"–ö—É—Ä—Å: {course}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–ì–æ—Ä–æ–¥: {city}",
        "idList": TRELLO_LIST_ID,
        "key": TRELLO_API_KEY,
        "token": TRELLO_TOKEN
    }
    response = requests.post(url, params=query)
    
    if response.status_code == 200:
        applications[name] = {"course": course, "age": age, "city": city, "card_id": response.json().get("id")}
    
    return response.status_code

# üîπ –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ Trello
def update_trello_card(name, field, new_value):
    if name not in applications:
        return "–û—à–∏–±–∫–∞: –∑–∞—è–≤–∫–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    
    card_id = applications[name]["card_id"]
    applications[name][field] = new_value

    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    new_desc = f"–ö—É—Ä—Å: {applications[name]['course']}\n–í–æ–∑—Ä–∞—Å—Ç: {applications[name]['age']}\n–ì–æ—Ä–æ–¥: {applications[name]['city']}"
    
    url = f"https://api.trello.com/1/cards/{card_id}"
    query = {
        "desc": new_desc,
        "key": TRELLO_API_KEY,
        "token": TRELLO_TOKEN
    }
    response = requests.put(url, params=query)

    return response.status_code

# üîπ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
def send_telegram_message(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    params = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
    requests.post(url, params=params)

# üîπ API-—ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏
@app.route("/send_to_trello", methods=["POST"])
def send_to_trello():
    data = request.json
    name = data.get("name")
    course = data.get("course")
    age = data.get("age")
    city = data.get("city")

    if not all([name, course, age, city]):
        return "–û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã"

    status = create_trello_card(name, course, age, city)

    message_text = f"‚úÖ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\nüë§ –ò–º—è: {name}\nüìö –ö—É—Ä—Å: {course}\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: {age}\nüåç –ì–æ—Ä–æ–¥: {city}"
    send_telegram_message(message_text)

    if status == 200:
        return "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Trello –∏ Telegram"
    else:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –≤ Trello"

# üîπ API-—ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
@app.route("/update_trello", methods=["POST"])
def update_trello():
    data = request.json
    name = data.get("name")
    field = data.get("field")  # —á—Ç–æ –º–µ–Ω—è–µ–º (course, age, city)
    new_value = data.get("new_value")  # –Ω–∞ —á—Ç–æ –º–µ–Ω—è–µ–º

    if not all([name, field, new_value]):
        return "–û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"

    status = update_trello_card(name, field, new_value)

    if status == 200:
        message_text = f"üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏\nüë§ –ò–º—è: {name}\n‚úèÔ∏è {field.capitalize()} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_value}"
        send_telegram_message(message_text)
        return "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ Trello –∏ Telegram"
    else:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –≤ Trello"

# üîπ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
