import os
import json
import requests
from flask import Flask, request, jsonify

app = Flask(__name__)

# üîë API-–∫–ª—é—á–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
TRELLO_API_KEY = "5880197335c3d727693408202c68375d"
TRELLO_TOKEN = "ATTA1ea4c6edf0b2892fec32580ab1417a42f521cd70c11af1453ddd0a4956e72896C175BE4E"
TRELLO_LIST_ID = "67c19cd6641117e44ae95227"

TELEGRAM_BOT_TOKEN = "7788946008:AAGULYh-GIkpr-GA3ZA70ERdCAT6BcGNW-g"
CHAT_ID = "-1002307069728"

# üìå URL Trello
TRELLO_BASE_URL = "https://api.trello.com/1"

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ –∏–º–µ–Ω–∏
def find_card_by_name(name):
    url = f"{TRELLO_BASE_URL}/boards/{TRELLO_BOARD_ID}/cards"
    params = {
        "key": TRELLO_API_KEY,
        "token": TRELLO_TOKEN
    }
    response = requests.get(url, params=params)
    if response.status_code == 200:
        cards = response.json()
        for card in cards:
            if card["name"].lower() == f"–ó–∞—è–≤–∫–∞ –æ—Ç {name}".lower():
                return card["id"], card["desc"]
    return None, None  # –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": message,
        "parse_mode": "Markdown"
    }
    requests.post(url, json=payload)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
@app.route('/send_to_trello', methods=['POST'])
def send_to_trello():
    data = request.json
    name = data.get("name")
    course = data.get("course")
    age = data.get("age")
    city = data.get("city")

    if not all([name, course, age, city]):
        return "–û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã", 400

    # üìå –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–æ—á–∫—É
    url = f"{TRELLO_BASE_URL}/cards"
    params = {
        "key": TRELLO_API_KEY,
        "token": TRELLO_TOKEN,
        "idList": "your_list_id",
        "name": f"–ó–∞—è–≤–∫–∞ –æ—Ç {name}",
        "desc": f"–ö—É—Ä—Å: {course}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–ì–æ—Ä–æ–¥: {city}"
    }
    response = requests.post(url, params=params)

    if response.status_code == 200:
        send_telegram_message(f"‚úÖ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞*\nüë§ –ò–º—è: {name}\nüìö –ö—É—Ä—Å: {course}\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: {age}\nüåç –ì–æ—Ä–æ–¥: {city}")
        return f"–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Trello!", 200
    else:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –≤ Trello", 500

# üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ (PATCH)
@app.route('/update_trello', methods=['PATCH'])
def update_trello():
    data = request.json
    name = data.get("name")
    field = data.get("field")
    new_value = data.get("new_value")

    if not all([name, field, new_value]):
        return "–û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã", 400

    # üîç –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ –∏–º–µ–Ω–∏
    card_id, card_desc = find_card_by_name(name)
    if not card_id:
        return f"–ó–∞—è–≤–∫–∞ —Å –∏–º–µ–Ω–µ–º '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", 404

    # üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
    desc_lines = card_desc.split("\n")
    updated_desc = []
    field_mapping = {"course": "–ö—É—Ä—Å", "age": "–í–æ–∑—Ä–∞—Å—Ç", "city": "–ì–æ—Ä–æ–¥"}

    field_found = False
    for line in desc_lines:
        if line.startswith(field_mapping.get(field, "")):
            updated_desc.append(f"{field_mapping[field]}: {new_value}")
            field_found = True
        else:
            updated_desc.append(line)

    if not field_found:
        updated_desc.append(f"{field_mapping[field]}: {new_value}")

    new_desc = "\n".join(updated_desc)

    # üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    url = f"{TRELLO_BASE_URL}/cards/{card_id}"
    params = {
        "key": TRELLO_API_KEY,
        "token": TRELLO_TOKEN,
        "desc": new_desc
    }
    response = requests.put(url, params=params)

    if response.status_code == 200:
        send_telegram_message(f"üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏*\nüë§ –ò–º—è: {name}\n‚úèÔ∏è {field_mapping[field]} –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {new_value}")
        return f"–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã! –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ Trello –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {new_value}", 200
    else:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –≤ Trello", 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)
